import React, { useState } from 'react';
import { Tent, Clock, Pill, Building, X } from 'lucide-react';
import { enrollVacationAPI } from '../../../api/vacation';
import { useToast } from '../../../context/ToastContext';
import './VacationModal.css';

const VacationEnrollModal = ({ type, remainingDays, onClose }) => {

    const [formData, setFormData] = useState({
        title: '',
        type: type,
        startDate: '',
        endDate: '',
        reason: '',
        halfDayType: 'MORNING' // Î∞òÏ∞® ÏÑ†ÌÉù Ïãú Í∏∞Î≥∏Í∞í
    });

    // Ìú¥Í∞Ä ÌÉÄÏûÖÎ≥Ñ ÏÑ§Ï†ï
    const vacationTypeConfig = {
        ANNUAL: {
            icon: <Tent size={24} />,  // Ïª¥Ìè¨ÎÑåÌä∏Î°ú ÏßÅÏ†ë Î†åÎçîÎßÅ
            title: 'Ïó∞Ï∞®',
            tags: ['1ÎÖÑÎãπ 15Í∞ú ÏÇ¨Ïö©Í∞ÄÎä•', 'Ïú†Í∏â', 'Ïó∞ÎßêÎßåÎ£å']
        },
        HALF: {
            icon: <Clock size={24} />,
            title: 'Î∞òÏ∞®',
            tags: ['0.5Ïùº Ï∞®Í∞ê', 'Ïú†Í∏â', 'Ïó∞Îßê ÎßåÎ£å']
        },
        SICK: {
            icon: <Pill size={24} />,
            title: 'Î≥ëÍ∞Ä',
            tags: ['1Ïùº Ï∞®Í∞ê', 'Ïú†Í∏â']
        },
        PUBLIC: {
            icon: <Building size={24} />,
            title: 'Í≥µÍ∞Ä',
            tags: ['0Ïùº Ï∞®Í∞ê', 'Ïú†Í∏â']
        }
    };
    const { showToast } = useToast();
    const currentConfig = vacationTypeConfig[type];

    const handleSubmit = async (e) => {
        e.preventDefault();

        const startDate = new Date(formData.startDate);
        const endDate = new Date(formData.endDate);
        
        if (endDate < startDate) {
            showToast('Ï¢ÖÎ£åÏùºÏù¥ ÏãúÏûëÏùºÎ≥¥Îã§ Îπ†Î•º Ïàò ÏóÜÏäµÎãàÎã§.', 'error');
            return;
        }

        try {
            const requestData = {
                ...formData,
                startDate: startDate.toISOString(),
                endDate: endDate.toISOString()
            };

            const response = await enrollVacationAPI(requestData);
            onClose(response);
            showToast('Ìú¥Í∞Ä Ïã†Ï≤≠Ïù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§.', 'success');
        } catch (error) {
            console.error('Ìú¥Í∞Ä Ïã†Ï≤≠ Ïã§Ìå®:', error);
            if (error.message === 'ÏûîÏó¨ Ìú¥Í∞Ä ÏùºÏàòÍ∞Ä Î∂ÄÏ°±Ìï©ÎãàÎã§.') {
                showToast('ÏûîÏó¨ Ìú¥Í∞Ä ÏùºÏàòÍ∞Ä Î∂ÄÏ°±Ìï©ÎãàÎã§.', 'error');
            }else {
                showToast('Ìú¥Í∞Ä Ïã†Ï≤≠Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.', 'error');
            }
        }
    };

    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData(prev => ({
            ...prev,
            [name]: value
        }));
    };

    return (
        <div className="vacation-modal-overlay">
            <div className="vacation-modal-content">
                
                
                <div className="vacation-modal-header">
                    {currentConfig.icon}
                    <h2 className='vacation-type'>{currentConfig.title}</h2>

                    <button 
                        className="vacation-modal-close" 
                        onClick={() => onClose(false)}>
                        √ó
                    </button>
                </div>

                <div className="vacation-info-section">
                    {currentConfig.tags.map((tag, index) => (
                        <span key={index} className="vacation-info-tag">{tag}</span>
                    ))}
                    
                    {type !== 'PUBLIC' && (
                        <div className="vacation-remain-days">
                            üí° ÏÇ¨Ïö© Í∞ÄÎä• Ìú¥Í∞Ä
                            <span className="days">{remainingDays}Ïùº</span>
                        </div>
                    )}
                </div>

                <form onSubmit={handleSubmit}>
                    <div className="vacation-form-group">
                        <label>Ï†úÎ™©</label>
                        <input
                            type="text"
                            name="title"
                            value={formData.title}
                            onChange={handleChange}
                            placeholder="Ìú¥Í∞Ä Ï†úÎ™©ÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
                            className="vacation-form-input"
                            required
                        />
                    </div>

                    {type === 'HALF' && (
                        <div className="vacation-form-group">
                            <label>Î∞òÏ∞® ÏÑ†ÌÉù</label>
                            <select
                                name="halfDayType"
                                value={formData.halfDayType}
                                onChange={handleChange}
                                className="vacation-form-input"
                            >
                                <option value="MORNING">Ïò§Ï†Ñ</option>
                                <option value="AFTERNOON">Ïò§ÌõÑ</option>
                            </select>
                        </div>
                    )}

                    <div className="vacation-form-group">
                        <label>Ìú¥Í∞Ä ÏùºÏ†ï</label>
                        <div className="vacation-date-inputs">
                            <input
                                type="date"
                                name="startDate"
                                value={formData.startDate}
                                onChange={handleChange}
                                className="vacation-form-input"
                                required
                            />
                            {type !== 'HALF_DAY' && (
                                <>
                                    <span>~</span>
                                    <input
                                        type="date"
                                        name="endDate"
                                        value={formData.endDate}
                                        onChange={handleChange}
                                        className="vacation-form-input"
                                        required
                                    />
                                </>
                            )}
                        </div>
                    </div>

                    <div className="vacation-form-group">
                        <label>Ìú¥Í∞Ä ÏÇ¨Ïú†</label>
                        <textarea
                            name="reason"
                            value={formData.reason}
                            onChange={handleChange}
                            placeholder="Ìú¥Í∞Ä ÏÇ¨Ïú†Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
                            className="vacation-form-textarea"
                            required
                        />
                    </div>

                    <div className="vacation-button-group">
                        
                        <button type="submit" className="vacation-submit-button">
                            Ìú¥Í∞ÄÏã†Ï≤≠
                        </button>
                    </div>
                </form>
            </div>
        </div>
    );
};

export default VacationEnrollModal;